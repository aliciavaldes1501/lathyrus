ggplot(subset(weather,year==1990),aes(date_julian,mean))+geom_line()+ggtitle("1990 temperatures")+
xlab("Date (number of days since vernal equinox)")+ylab("Mean temperature")+geom_hline(yintercept=5,color="blue")
ggplot(weather,aes(date_julian,cumGDD3))+geom_line()+facet_wrap(~year)+ggtitle("Cumulated GDD3 against julian date")+
xlab("Date (number of days since vernal equinox)")+ylab("Cumulated GDD3")
weather$year<-as.factor(weather$year)
ggplot(weather,aes(date_julian,GDD3,color=year))+geom_smooth(method="loess",se=F,size=0.5)+xlab("Date (number of days since vernal equinox)")+
ylab("GDD3")+ggtitle("GDD3 against julian date")+geom_point(size=0.1)
with(mean_weather3,plot(GDD3_123456~as.factor(year),ylab="GDD3 January-June",xlab="year"))
grid.arrange(ggplot(mean_weather3,aes(year,GDD3_1))+
geom_bar(stat="identity",aes(fill = year==1990))+ylab("GDD January")+
scale_fill_manual(values=c("#999999","#D55E00"))+theme(legend.position="none"),
ggplot(mean_weather3,aes(year,GDD3_2))+
geom_bar(stat="identity",aes(fill = year==1990))+ylab("GDD February")+
scale_fill_manual(values=c("#999999","#D55E00"))+theme(legend.position="none"),
ggplot(mean_weather3,aes(year,GDD3_3))+
geom_bar(stat="identity",aes(fill = year==1990))+ylab("GDD March")+
scale_fill_manual(values=c("#999999","#D55E00"))+theme(legend.position="none"),
ggplot(mean_weather3,aes(year,GDD3_4))+
geom_bar(stat="identity",aes(fill = year==1990))+ylab("GDD April")+
scale_fill_manual(values=c("#999999","#D55E00"))+theme(legend.position="none"),
ggplot(mean_weather3,aes(year,GDD3_5))+
geom_bar(stat="identity",aes(fill = year==1990))+ylab("GDD May")+
scale_fill_manual(values=c("#999999","#D55E00"))+theme(legend.position="none"),
ggplot(mean_weather3,aes(year,GDD3_6))+
geom_bar(stat="identity",aes(fill = year==1990))+ylab("GDD June")+
scale_fill_manual(values=c("#999999","#D55E00"))+theme(legend.position="none"),
ncol=2,top="GDD for different months for each year, 1990 in red")
grid.arrange(ggplot(mean_weather3,aes(year,GDD3_123456))+
geom_bar(stat="identity",aes(fill = year==1990))+ylab("GDD January-June")+
scale_fill_manual(values=c("#999999","#D55E00"))+theme(legend.position="none"),
ggplot(mean_weather3,aes(year,GDD3_123))+
geom_bar(stat="identity",aes(fill = year==1990))+ylab("GDD January-March")+
scale_fill_manual(values=c("#999999","#D55E00"))+theme(legend.position="none"),
ggplot(mean_weather3,aes(year,GDD3_34))+
geom_bar(stat="identity",aes(fill = year==1990))+ylab("GDD March-April")+
scale_fill_manual(values=c("#999999","#D55E00"))+theme(legend.position="none"),
ggplot(mean_weather3,aes(year,GDD3_45))+
geom_bar(stat="identity",aes(fill = year==1990))+ylab("GDD April-May")+
scale_fill_manual(values=c("#999999","#D55E00"))+theme(legend.position="none"),
ggplot(mean_weather3,aes(year,GDD3_456))+
geom_bar(stat="identity",aes(fill = year==1990))+ylab("GDD April-June")+
scale_fill_manual(values=c("#999999","#D55E00"))+theme(legend.position="none"),
ncol=2,top="GDD for different periods for each year, 1990 in red")
weather$winter<-as.factor(with(weather,ifelse(month==12|period=="a",1,0)))
#Define winter (=December or January-March till day before vernal equinox)
weather$mean_below_0<-with(weather,ifelse(mean<0,1,0))
weather$min_below_0<-with(weather,ifelse(min<0,1,0))
weather$max_below_0<-with(weather,ifelse(max<0,1,0))
weather$mean_below_minus5<-with(weather,ifelse(mean<(-5),1,0))
weather$min_below_minus5<-with(weather,ifelse(min<(-5),1,0))
weather$max_below_minus5<-with(weather,ifelse(max<(-5),1,0))
mean_weather3_w<-plyr::join_all(list(
aggregate(mean ~ year, data=subset(weather,winter==1), FUN=mean),   #Mean of mean daily temperature
aggregate(min ~ year, data=subset(weather,winter==1), FUN=mean),    #Mean of min daily temperature
aggregate(max ~ year, data=subset(weather,winter==1), FUN=mean),    #Mean of max daily temperature
aggregate(precipitation ~ year, data= subset(weather,winter==1), FUN=sum),#Sum of precipitation
aggregate(mean_below_0 ~ year,data= subset(weather,winter==1), FUN=sum),  #N days with mean<0
aggregate(min_below_0 ~ year,data= subset(weather,winter==1), FUN=sum),  #N days with min<0
aggregate(max_below_0 ~ year,data= subset(weather,winter==1), FUN=sum),  #N days with max<0
aggregate(mean_below_minus5 ~ year,data= subset(weather,winter==1), FUN=sum), #N days with mean<-5
aggregate(min_below_minus5 ~ year,data= subset(weather,winter==1), FUN=sum),  #N days with min<-5
aggregate(max_below_minus5 ~ year,data= subset(weather,winter==1), FUN=sum)), #N days with max<-5
by = NULL, type = "left", match = "all")
colnames(mean_weather3_w)[2:11]<-paste(colnames(mean_weather3_w)[2:11],"w", sep = "_")
mean_weather4<-merge(mean_weather3,mean_weather3_w) #Merge with previous data
models6<-lapply(names(mean_weather4)[c(223:232)],
function(x) {lm(substitute(FFD_mean ~ scale(i), list(i = as.name(x))),
data = mean_weather4)})
models6_summary<-lapply(X = models6, FUN = summary)%>% lapply(prettify) %>% bind_rows()
models6_summary<-models6_summary[c(1:2,5,6)]
names(models6_summary)<-c("variable","Estimate","P","sig")
models6_summary<-subset(models6_summary,!variable=="(Intercept)")
models6_summary<-cbind(models6_summary,sapply(lapply(X = models6, FUN = summary), "[[", 9))
names(models6_summary)[5]<-"Rsquare"
kable(arrange(subset(models6_summary,P<0.05),desc(Rsquare)))
models7<-lapply(names(mean_weather4)[c(223:232)],
function(x) {lm(substitute(FFD_var ~ scale(i), list(i = as.name(x))),
data = mean_weather4)})
models7_summary<-lapply(X = models7, FUN = summary)%>% lapply(prettify) %>% bind_rows()
models7_summary<-models7_summary[c(1:2,5,6)]
names(models7_summary)<-c("variable","Estimate","P","sig")
models7_summary<-subset(models7_summary,!variable=="(Intercept)")
models7_summary<-cbind(models7_summary,sapply(lapply(X = models7, FUN = summary), "[[", 9))
names(models7_summary)[5]<-"Rsquare"
kable(arrange(subset(models7_summary,P<0.05),desc(Rsquare)))
models8<-lapply(names(mean_weather4)[c(223:232)],
function(x) {lm(substitute(FFD_dur ~ scale(i), list(i = as.name(x))),
data = mean_weather4)})
models8_summary<-lapply(X = models8, FUN = summary)%>% lapply(prettify) %>% bind_rows()
models8_summary<-models8_summary[c(1:2,5,6)]
names(models8_summary)<-c("variable","Estimate","P","sig")
models8_summary<-subset(models8_summary,!variable=="(Intercept)")
models8_summary<-cbind(models8_summary,sapply(lapply(X = models8, FUN = summary), "[[", 9))
names(models8_summary)[5]<-"Rsquare"
kable(arrange(subset(models8_summary,P<0.05),desc(Rsquare)))
models9<-lapply(names(mean_weather4)[c(223:232)],
function(x) {lm(substitute(FFD_skew ~ scale(i), list(i = as.name(x))),
data = mean_weather4)})
models9_summary<-lapply(X = models9, FUN = summary)%>% lapply(prettify) %>% bind_rows()
models9_summary<-models9_summary[c(1:2,5,6)]
names(models9_summary)<-c("variable","Estimate","P","sig")
models9_summary<-subset(models9_summary,!variable=="(Intercept)")
models9_summary<-cbind(models9_summary,sapply(lapply(X = models9, FUN = summary), "[[", 9))
names(models9_summary)[5]<-"Rsquare"
kable(arrange(subset(models9_summary,P<0.05),desc(Rsquare)))
models10<-lapply(names(mean_weather4)[c(223:232)],
function(x) {lm(substitute(FFD_kurt ~ scale(i), list(i = as.name(x))),
data = mean_weather4)})
models10_summary<-lapply(X = models10, FUN = summary)%>% lapply(prettify) %>% bind_rows()
models10_summary<-models10_summary[c(1:2,5,6)]
names(models10_summary)<-c("variable","Estimate","P","sig")
models10_summary<-subset(models10_summary,!variable=="(Intercept)")
models10_summary<-cbind(models10_summary,sapply(lapply(X = models10, FUN = summary), "[[", 9))
names(models10_summary)[5]<-"Rsquare"
kable(arrange(subset(models10_summary,P<0.05),desc(Rsquare)))
#Proportion of plants having started flowering
models11<-with(alldata_agg,
by(alldata_agg, year,
function(x) glm(prop_fl ~ cumGDH3v, data = x,family=binomial)))
coefs_models11<-as.data.frame(sapply(models11, coef)[2,])
coefs_models11$year<-row.names(coefs_models11)
names(coefs_models11)<-c("resp_cumGDH3v","year")
mean_weather5<-merge(mean_weather4,coefs_models11)
#Fit univariate linear models of resp_cumGDH3v against each winter predictor
models12<-lapply(names(mean_weather5)[c(223:232)],
function(x) {lm(substitute(resp_cumGDH3v ~ scale(i), list(i = as.name(x))),
data = mean_weather5)})
models12_summary<-lapply(X = models12, FUN = summary)%>% lapply(prettify) %>% bind_rows()
models12_summary<-models12_summary[c(1:2,5,6)]
names(models12_summary)<-c("variable","Estimate","P","sig")
models12_summary<-subset(models12_summary,!variable=="(Intercept)")
models12_summary<-cbind(models12_summary,sapply(lapply(X = models12, FUN = summary), "[[", 9))
names(models12_summary)[5]<-"Rsquare"
kable(arrange(subset(models12_summary,P<0.05),desc(Rsquare)))
#Fit linear models of FFD against mean45*chilling measure
models13<-lapply(names(mean_weather5)[c(223:232)],
function(x) {lm(substitute(FFD_mean ~ scale(mean45)*scale(i), list(i = as.name(x))),
data = mean_weather5)})
models13_summary<-lapply(X = models13, FUN = summary)%>% lapply(prettify) %>% bind_rows()
models13_summary<-models13_summary[c(1:2,5,6)]
names(models13_summary)<-c("variable","Estimate","P","sig")
models13_summary<-subset(models13_summary,!variable=="(Intercept)")
models13_summary<-cbind(models13_summary,sapply(lapply(X = models13, FUN = summary), "[[", 9))
names(models13_summary)[5]<-"Rsquare"
kable(models13_summary)
save.image(file = "C:/Users/User/Dropbox/SU/Projects/lathyrus/code/image1.RData")
head(alldata_weather_subs)
load(file = "C:/Users/User/Dropbox/SU/Projects/lathyrus/code/image1.RData")
library(plyr)
library(dplyr)
library(broom)
library(knitr)
library(car)
library(ggplot2)
library(fmsb)
library(gridExtra)
data_sel<-subset(alldata_weather_subs,!is.na(n_fl)&!is.na(FFD))
#Select data where both FFD and n_fl are available
nrow(subset(data_sel,is.na(n_intact_seeds))) #No NAs for seed data
par(mfrow=c(1,3))
with(data_sel,hist(FFD))
with(data_sel,hist(n_fl))
with(data_sel,hist(n_intact_seeds))
data_sel<-data.frame(
data_sel %>%
group_by(year) %>%
mutate(n_intact_seeds_rel=n_intact_seeds/mean(n_intact_seeds)) %>% #Relative fitness
mutate(FFD_std=(FFD-mean(FFD))/sd(FFD)) %>%                        #Standardized FFD
mutate(n_fl_std=(n_fl-mean(n_fl))/sd(n_fl)))                       #Standardized n_fl
Anova(lm(n_intact_seeds_rel ~ FFD_std+FFD_std:year, data = data_sel),type="II")
#Not sure about type - II for interactions?
Anova(lm(n_intact_seeds_rel ~ FFD_std+FFD_std:year+n_fl_std+n_fl_std:year,
data = data_sel),type="II")
#Selection for early flowering differs among years when considering only FFD, but
#does not differ among years when including also number of flowers as a covariate
Anova(update(lm(n_intact_seeds_rel ~ (FFD_std+I(FFD_std^2))*year,
data = data_sel),.~.-year),type="II")
Anova(update(lm(n_intact_seeds_rel~(FFD_std+I(FFD_std^2)+n_fl_std+I(n_fl_std^2)+
FFD_std:n_fl_std)*year, data = data_sel),.~.-year),type="II")
#No evidence of non-linear selection for FFD (but quadratic selection for n_fl)
load(file = "C:/Users/User/Dropbox/SU/Projects/lathyrus/code/image1.RData")
library(plyr)
library(dplyr)
library(broom)
library(knitr)
library(car)
library(ggplot2)
library(fmsb)
library(gridExtra)
data_sel<-subset(alldata_weather_subs,!is.na(n_fl)&!is.na(FFD))
#Select data where both FFD and n_fl are available
nrow(subset(data_sel,is.na(n_intact_seeds))) #No NAs for seed data
par(mfrow=c(1,3))
with(data_sel,hist(FFD))
with(data_sel,hist(n_fl))
with(data_sel,hist(n_intact_seeds))
data_sel<-data.frame(
data_sel %>%
group_by(year) %>%
mutate(n_intact_seeds_rel=n_intact_seeds/mean(n_intact_seeds)) %>% #Relative fitness
mutate(FFD_std=(FFD-mean(FFD))/sd(FFD)) %>%                        #Standardized FFD
mutate(n_fl_std=(n_fl-mean(n_fl))/sd(n_fl)))                       #Standardized n_fl
Anova(lm(n_intact_seeds_rel ~ FFD_std+FFD_std:year, data = data_sel),type="II")
#Not sure about type - II for interactions?
Anova(lm(n_intact_seeds_rel ~ FFD_std+FFD_std:year+n_fl_std+n_fl_std:year,
data = data_sel),type="II")
#Selection for early flowering differs among years when considering only FFD, but
#does not differ among years when including also number of flowers as a covariate
Anova(update(lm(n_intact_seeds_rel ~ (FFD_std+I(FFD_std^2))*year,
data = data_sel),.~.-year),type="II")
Anova(update(lm(n_intact_seeds_rel~(FFD_std+I(FFD_std^2)+n_fl_std+I(n_fl_std^2)+
FFD_std:n_fl_std)*year, data = data_sel),.~.-year),type="II")
#No evidence of non-linear selection for FFD (but quadratic selection for n_fl)
load(file = "C:/Users/User/Dropbox/SU/Projects/lathyrus/code/image1.RData")
library(dplyr)
library(broom)
library(knitr)
library(car)
library(ggplot2)
library(fmsb)
library(gridExtra)
data_sel<-subset(alldata_weather_subs,!is.na(n_fl)&!is.na(FFD))
#Select data where both FFD and n_fl are available
nrow(subset(data_sel,is.na(n_intact_seeds))) #No NAs for seed data
par(mfrow=c(1,3))
with(data_sel,hist(FFD))
with(data_sel,hist(n_fl))
with(data_sel,hist(n_intact_seeds))
data_sel<-data.frame(
data_sel %>%
group_by(year) %>%
mutate(n_intact_seeds_rel=n_intact_seeds/mean(n_intact_seeds)) %>% #Relative fitness
mutate(FFD_std=(FFD-mean(FFD))/sd(FFD)) %>%                        #Standardized FFD
mutate(n_fl_std=(n_fl-mean(n_fl))/sd(n_fl)))                       #Standardized n_fl
load(file = "C:/Users/User/Dropbox/SU/Projects/lathyrus/code/image1.RData")
library(dplyr)
library(broom)
library(knitr)
library(car)
library(ggplot2)
library(fmsb)
library(gridExtra)
data_sel<-subset(alldata_weather_subs,!is.na(n_fl)&!is.na(FFD))
#Select data where both FFD and n_fl are available
nrow(subset(data_sel,is.na(n_intact_seeds))) #No NAs for seed data
par(mfrow=c(1,3))
with(data_sel,hist(FFD))
with(data_sel,hist(n_fl))
with(data_sel,hist(n_intact_seeds))
data_sel<-data.frame(
data_sel %>%
group_by(year) %>%
mutate(n_intact_seeds_rel=n_intact_seeds/mean(n_intact_seeds)) %>% #Relative fitness
mutate(FFD_std=(FFD-mean(FFD))/sd(FFD)) %>%                        #Standardized FFD
mutate(n_fl_std=(n_fl-mean(n_fl))/sd(n_fl)))                       #Standardized n_fl
Anova(lm(n_intact_seeds_rel ~ FFD_std+FFD_std:year, data = data_sel),type="II")
#Not sure about type - II for interactions?
Anova(lm(n_intact_seeds_rel ~ FFD_std+FFD_std:year+n_fl_std+n_fl_std:year,
data = data_sel),type="II")
#Selection for early flowering differs among years when considering only FFD, but
#does not differ among years when including also number of flowers as a covariate
Anova(update(lm(n_intact_seeds_rel ~ (FFD_std+I(FFD_std^2))*year,
data = data_sel),.~.-year),type="II")
Anova(update(lm(n_intact_seeds_rel~(FFD_std+I(FFD_std^2)+n_fl_std+I(n_fl_std^2)+
FFD_std:n_fl_std)*year, data = data_sel),.~.-year),type="II")
#No evidence of non-linear selection for FFD (but quadratic selection for n_fl)
sel_models1<-data_sel %>%
group_by(year) %>%
do(model = lm(n_intact_seeds_rel ~ FFD_std, data = .))
sel_models1_coefs<-data.frame(sel_models1 %>% tidy(model))
sel_models1_coefs$sig<-ifelse(sel_models1_coefs$p.value<0.05,"*","")
sel_models1_rsq<-data.frame(sel_models1 %>% glance(model))[1:3]
sel_models1_anova<-cbind(
year=c("1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","2006",
"2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017"),
variable=rep(c("FFD_std"),22),
ldply(lapply(as.list(sel_models1)$model,FUN=Anova), function(x) data.frame(x)[1,3:4]))
sel_models1<-data_sel %>%
group_by(year) %>%
do(model = lm(n_intact_seeds_rel ~ FFD_std, data = .))
sel_models1_coefs<-data.frame(sel_models1 %>% tidy(model))
sel_models1_coefs$sig<-ifelse(sel_models1_coefs$p.value<0.05,"*","")
sel_models1_rsq<-data.frame(sel_models1 %>% glance(model))[1:3]
sel_models1_anova<-cbind(
year=c("1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","2006",
"2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017"),
variable=rep(c("FFD_std"),22),
plyr::ldply(lapply(as.list(sel_models1)$model,FUN=Anova), function(x) data.frame(x)[1,3:4]))
sel_models1_anova$sig<-ifelse(sel_models1_anova$Pr..F.<0.05,"*","")
kable(sel_models1_coefs)  #Selection gradients
#FFD * (selection for early flowering) in all years but 1995,2009,2013,2015,2017
kable(sel_models1_rsq) #R squares
kable(sel_models1_anova) #Anova results
ggplot(data_sel,aes(FFD_std,n_intact_seeds_rel,colour=year))+
geom_smooth(method="lm",se=F,size=0.6)+geom_point(size=0.5)+
xlab("Standardized FFD")+ylab("Relative number of intact seeds")
ggplot(data_sel,aes(FFD_std,n_intact_seeds_rel,colour=year))+
geom_smooth(method="lm",se=F,size=0.6)+
xlab("Standardized FFD")+ylab("Relative number of intact seeds")
sel_models2<-as.list(data_sel %>%
group_by(year) %>%
do(model = lm(n_intact_seeds_rel ~ FFD_std+n_fl_std, data = .)) )
sel_models2<-data_sel %>%
group_by(year) %>%
do(model = lm(n_intact_seeds_rel ~ FFD_std+n_fl_std, data = .))
sel_models2_coefs<-data.frame(sel_models2 %>% tidy(model))
sel_models2_coefs$sig<-ifelse(sel_models2_coefs$p.value<0.05,"*","")
sel_models2_rsq<-data.frame(sel_models2 %>% glance(model))[1:3]
sel_models2_anova<-cbind(
year=c("1987","1987","1988","1988","1989","1989","1990","1990","1991","1991",
"1992","1992","1993","1993","1994","1994","1995","1995","1996","1996","2006",
"2006","2007","2007","2008","2008","2009","2009","2010","2010","2011","2011",
"2012","2012","2013","2013","2014","2014","2015","2015","2016","2016",
"2017","2017"),variable=rep(c("FFD_std","n_fl_std"),22),
plyr::ldply(lapply(as.list(sel_models2)$model,FUN=Anova),
function(x) data.frame(x)[1:2,3:4]))
sel_models2_anova$sig<-ifelse(sel_models2_anova$Pr..F.<0.05,"*","")
kable(sel_models2_coefs) #Selection gradients
#FFD * (selection for early flowering) in 1991,1992,1993,2007,2010,2012,2014
kable(sel_models2_rsq) #R squares
kable(sel_models2_anova) #Anova results
sel_grads_FFD<-subset(sel_models2_coefs,term=="FFD_std")[c(1,3,7)]
sel_grads_FFD
#These are the per-year selection gradients for FFD, to be used in further analyses
sel_models3<-data_sel %>%
group_by(year) %>%
do(model = lm(n_intact_seeds_rel ~ FFD_std+I(FFD_std^2)+n_fl_std+I(n_fl_std^2)+
FFD_std:n_fl_std, data = .))
sel_models3_coefs<-data.frame(sel_models3 %>% tidy(model))
sel_models3_coefs$sig<-ifelse(sel_models3_coefs$p.value<0.05,"*","")
sel_models3_rsq<-data.frame(sel_models3 %>% glance(model))[1:3]
sel_models3_anova<-cbind(
year=c("1987","1987","1987","1987","1987","1988","1988","1988","1988","1988",
"1989","1989","1989","1989","1989","1990","1990","1990","1990","1990",
"1991","1991","1991","1991","1991","1992","1992","1992","1992","1992",
"1993","1993","1993","1993","1993","1994","1994","1994","1994","1994",
"1995","1995","1995","1995","1995","1996","1996","1996","1996","1996",
"2006","2006","2006","2006","2006","2007","2007","2007","2007","2007",
"2008","2008","2008","2008","2008","2009","2009","2009","2009","2009",
"2010","2010","2010","2010","2010","2011","2011","2011","2011","2011",
"2012","2012","2012","2012","2012","2013","2013","2013","2013","2013",
"2014","2014","2014","2014","2014","2015","2015","2015","2015","2015",
"2016","2016","2016","2016","2016","2017","2017","2017","2017","2017"),
variable=rep(c("FFD_std","I(FFD_std^2)","n_fl_std","I(n_fl_std^2)","FFD_std:n_fl_std"),22),
plyr::ldply(lapply(as.list(sel_models3)$model,FUN=Anova), function(x) data.frame(x)[1:5,3:4]))
sel_models3_anova$sig<-ifelse(sel_models3_anova$Pr..F.<0.05,"*","")
kable(sel_models3_coefs) #Selection gradients
#Correlational selection in 1988, 2016
#Quadratic selection on n_fl in 1990, 2006, 2015 and on FFD in 2015
kable(sel_models3_rsq) #R squares
kable(sel_models3_anova) #Anova results
ggplot(sel_grads_FFD,aes(estimate,year,colour=sig))+geom_point()+ylab("Selection gradient")+
scale_color_manual(labels = c("Not significant", "Significant"), values = c("blue", "red"))+
geom_vline(xintercept=0)+theme(legend.position="top")
sel_grads_FFD
head(mean_weather5)
sel_grads_FFD$signif<-as.factor(with(sel_grads_FFD,ifelse(sig=="*","1","0")))
sel_grads_FFD$sig<-NULL
names(sel_grads_FFD)<-c("year","selgradFFD","sig_selgradFFD")
data_sel_agg<-merge(mean_weather5,sel_grads_FFD)
names(data_sel_agg)
load(file = "C:/Users/User/Dropbox/SU/Projects/lathyrus/code/image1.RData")
library(dplyr)
library(broom)
library(knitr)
library(car)
library(ggplot2)
library(fmsb)
library(gridExtra)
data_sel<-subset(alldata_weather_subs,!is.na(n_fl)&!is.na(FFD))
#Select data where both FFD and n_fl are available
nrow(subset(data_sel,is.na(n_intact_seeds))) #No NAs for seed data
par(mfrow=c(1,3))
with(data_sel,hist(FFD))
with(data_sel,hist(n_fl))
with(data_sel,hist(n_intact_seeds))
data_sel<-data.frame(
data_sel %>%
group_by(year) %>%
mutate(n_intact_seeds_rel=n_intact_seeds/mean(n_intact_seeds)) %>% #Relative fitness
mutate(FFD_std=(FFD-mean(FFD))/sd(FFD)) %>%                        #Standardized FFD
mutate(n_fl_std=(n_fl-mean(n_fl))/sd(n_fl)))                       #Standardized n_fl
Anova(lm(n_intact_seeds_rel ~ FFD_std+FFD_std:year, data = data_sel),type="II")
#Not sure about type - II for interactions?
Anova(lm(n_intact_seeds_rel ~ FFD_std+FFD_std:year+n_fl_std+n_fl_std:year,
data = data_sel),type="II")
#Selection for early flowering differs among years when considering only FFD, but
#does not differ among years when including also number of flowers as a covariate
Anova(update(lm(n_intact_seeds_rel ~ (FFD_std+I(FFD_std^2))*year,
data = data_sel),.~.-year),type="II")
Anova(update(lm(n_intact_seeds_rel~(FFD_std+I(FFD_std^2)+n_fl_std+I(n_fl_std^2)+
FFD_std:n_fl_std)*year, data = data_sel),.~.-year),type="II")
#No evidence of non-linear selection for FFD (but quadratic selection for n_fl)
sel_models1<-data_sel %>%
group_by(year) %>%
do(model = lm(n_intact_seeds_rel ~ FFD_std, data = .))
sel_models1_coefs<-data.frame(sel_models1 %>% tidy(model))
sel_models1_coefs$sig<-ifelse(sel_models1_coefs$p.value<0.05,"*","")
sel_models1_rsq<-data.frame(sel_models1 %>% glance(model))[1:3]
sel_models1_anova<-cbind(
year=c("1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","2006",
"2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017"),
variable=rep(c("FFD_std"),22),
plyr::ldply(lapply(as.list(sel_models1)$model,FUN=Anova), function(x) data.frame(x)[1,3:4]))
sel_models1_anova$sig<-ifelse(sel_models1_anova$Pr..F.<0.05,"*","")
kable(sel_models1_coefs)  #Selection gradients
#FFD * (selection for early flowering) in all years but 1995,2009,2013,2015,2017
kable(sel_models1_rsq) #R squares
kable(sel_models1_anova) #Anova results
ggplot(data_sel,aes(FFD_std,n_intact_seeds_rel,colour=year))+
geom_smooth(method="lm",se=F,size=0.6)+geom_point(size=0.5)+
xlab("Standardized FFD")+ylab("Relative number of intact seeds")
ggplot(data_sel,aes(FFD_std,n_intact_seeds_rel,colour=year))+
geom_smooth(method="lm",se=F,size=0.6)+
xlab("Standardized FFD")+ylab("Relative number of intact seeds")
sel_models2<-as.list(data_sel %>%
group_by(year) %>%
do(model = lm(n_intact_seeds_rel ~ FFD_std+n_fl_std, data = .)) )
sel_models2<-data_sel %>%
group_by(year) %>%
do(model = lm(n_intact_seeds_rel ~ FFD_std+n_fl_std, data = .))
sel_models2_coefs<-data.frame(sel_models2 %>% tidy(model))
sel_models2_coefs$sig<-ifelse(sel_models2_coefs$p.value<0.05,"*","")
sel_models2_rsq<-data.frame(sel_models2 %>% glance(model))[1:3]
sel_models2_anova<-cbind(
year=c("1987","1987","1988","1988","1989","1989","1990","1990","1991","1991",
"1992","1992","1993","1993","1994","1994","1995","1995","1996","1996","2006",
"2006","2007","2007","2008","2008","2009","2009","2010","2010","2011","2011",
"2012","2012","2013","2013","2014","2014","2015","2015","2016","2016",
"2017","2017"),variable=rep(c("FFD_std","n_fl_std"),22),
plyr::ldply(lapply(as.list(sel_models2)$model,FUN=Anova),
function(x) data.frame(x)[1:2,3:4]))
sel_models2_anova$sig<-ifelse(sel_models2_anova$Pr..F.<0.05,"*","")
kable(sel_models2_coefs) #Selection gradients
#FFD * (selection for early flowering) in 1991,1992,1993,2007,2010,2012,2014
kable(sel_models2_rsq) #R squares
kable(sel_models2_anova) #Anova results
sel_grads_FFD<-subset(sel_models2_coefs,term=="FFD_std")[c(1,3,7)]
sel_grads_FFD
#These are the per-year selection gradients for FFD, to be used in further analyses
sel_models3<-data_sel %>%
group_by(year) %>%
do(model = lm(n_intact_seeds_rel ~ FFD_std+I(FFD_std^2)+n_fl_std+I(n_fl_std^2)+
FFD_std:n_fl_std, data = .))
sel_models3_coefs<-data.frame(sel_models3 %>% tidy(model))
sel_models3_coefs$sig<-ifelse(sel_models3_coefs$p.value<0.05,"*","")
sel_models3_rsq<-data.frame(sel_models3 %>% glance(model))[1:3]
sel_models3_anova<-cbind(
year=c("1987","1987","1987","1987","1987","1988","1988","1988","1988","1988",
"1989","1989","1989","1989","1989","1990","1990","1990","1990","1990",
"1991","1991","1991","1991","1991","1992","1992","1992","1992","1992",
"1993","1993","1993","1993","1993","1994","1994","1994","1994","1994",
"1995","1995","1995","1995","1995","1996","1996","1996","1996","1996",
"2006","2006","2006","2006","2006","2007","2007","2007","2007","2007",
"2008","2008","2008","2008","2008","2009","2009","2009","2009","2009",
"2010","2010","2010","2010","2010","2011","2011","2011","2011","2011",
"2012","2012","2012","2012","2012","2013","2013","2013","2013","2013",
"2014","2014","2014","2014","2014","2015","2015","2015","2015","2015",
"2016","2016","2016","2016","2016","2017","2017","2017","2017","2017"),
variable=rep(c("FFD_std","I(FFD_std^2)","n_fl_std","I(n_fl_std^2)","FFD_std:n_fl_std"),22),
plyr::ldply(lapply(as.list(sel_models3)$model,FUN=Anova), function(x) data.frame(x)[1:5,3:4]))
sel_models3_anova$sig<-ifelse(sel_models3_anova$Pr..F.<0.05,"*","")
kable(sel_models3_coefs) #Selection gradients
#Correlational selection in 1988, 2016
#Quadratic selection on n_fl in 1990, 2006, 2015 and on FFD in 2015
kable(sel_models3_rsq) #R squares
kable(sel_models3_anova) #Anova results
ggplot(sel_grads_FFD,aes(estimate,year,colour=sig))+geom_point()+ylab("Selection gradient")+
scale_color_manual(labels = c("Not significant", "Significant"), values = c("blue", "red"))+
geom_vline(xintercept=0)+theme(legend.position="top")
sel_grads_FFD$signif<-as.factor(with(sel_grads_FFD,ifelse(sig=="*","1","0")))
sel_grads_FFD$sig<-NULL
names(sel_grads_FFD)<-c("year","selgradFFD","sig_selgradFFD")
data_sel_agg<-merge(mean_weather5,sel_grads_FFD)
names(data_sel_agg)[c(3:228)]
names(data_sel_agg)
#Fit univariate linear models of selgradFFD against each predictor (climatic variables)
models_selgrads<-lapply(names(data_sel_agg)[c(2:217,223:232)], function(x) {
summary(lm(substitute(selgradFFD ~ scale(i), list(i = as.name(x))),data=data_sel_agg))})
names(data_sel_agg)[c(2:217,223:232)]
#Fit univariate linear models of selgradFFD against each predictor (climatic variables)
models_selgrads<-lapply(names(data_sel_agg)[c(2:217)], function(x) {
summary(lm(substitute(selgradFFD ~ scale(i), list(i = as.name(x))),data=data_sel_agg))})
#Fit univariate linear models of selgradFFD against each predictor (climatic variables)
models_selgrads<-lapply(names(data_sel_agg)[c(3:228)], function(x) {
summary(lm(substitute(selgradFFD ~ scale(i), list(i = as.name(x))),data=data_sel_agg))})
#Fit univariate linear models of selgradFFD against each predictor (climatic variables)
models_selgrads<-lapply(names(data_sel_agg)[c(2:228)], function(x) {
summary(lm(substitute(selgradFFD ~ scale(i), list(i = as.name(x))),data=data_sel_agg))})
#Fit univariate linear models of selgradFFD against each predictor (climatic variables)
models_selgrads<-lapply(names(data_sel_agg)[c(3:217,223:232)], function(x) {
summary(lm(substitute(selgradFFD ~ scale(i), list(i = as.name(x))),data=data_sel_agg))})
#Build a table with estimate, p and r square for all fitted models
models_selgrads<-cbind(names(data_sel_agg)[c(3:228)],
ldply(models_selgrads, function(x) coef(x)[2]),
ldply(models_selgrads, function(x) coef(x)[8]),
ldply(models_selgrads, function(x) x$adj.r.square))
#Build a table with estimate, p and r square for all fitted models
models_selgrads<-cbind(names(data_sel_agg)[c(3:228)],
plyr::ldply(models_selgrads, function(x) coef(x)[2]),
plyr::ldply(models_selgrads, function(x) coef(x)[8]),
plyr::ldply(models_selgrads, function(x) x$adj.r.square))
#Build a table with estimate, p and r square for all fitted models
models_selgrads<-cbind(names(data_sel_agg)[c(3:217,223:232)],
plyr::ldply(models_selgrads, function(x) coef(x)[2]),
plyr::ldply(models_selgrads, function(x) coef(x)[8]),
plyr::ldply(models_selgrads, function(x) x$adj.r.square))
names(models_selgrads)<-c("variable","estimate","p","adj.rsquare")
models_selgrads$sig<-ifelse(models_selgrads$p<0.05,"*","") # *=p<0.05
#Order models with significant variables by R square
kable(arrange(subset(models_selgrads,sig=="*"),desc(adj.rsquare)))
kable(arrange(subset(models_selgrads,sig=="*"),desc(adj.rsquare)))
